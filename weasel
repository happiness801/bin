#!/usr/bin/env bash

# Scan input for subjective or weasel words
#  Idea from: https://inowland.medium.com/using-6-page-and-2-page-documents-to-make-organizational-decisions-3216badde909
# NOTE: -w option in Grep matches only whole words (instead of using regex in expression)
#
# USAGE:
#   ./weasel document
# OR
#   pipe_of_content | weasel
# 
# OUTPUT:
#   blank if no weasel words/phrases are found
#   Shows word and matching line in file/output if found
# 
# TODO:
#   Fix passing multilpe files (e.g. *) again
#   STDIN works, but is very slow (awful nested loop...)

MY_PATH=`dirname "$0"`
MY_PATH=`( cd "$MY_PATH" && pwd )`

# Loop on keywords
while read word;
do

	echo $word; continue;

	# Search given files for matches of word
	grep_result=$(grep -wHin "$word" "$*")

	# If matches, print out matching word, THEN matching lines from Grep
	if [[ $? == "0" ]]; then
		echo
		echo "*****>>>>> $word <<<<<*****"
		echo $grep_result
	fi
done < $MY_PATH/weasel.list

exit 0
