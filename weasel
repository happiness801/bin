#!/usr/bin/env bash

# Scan input for subjective or weasel words
#  Idea from: https://inowland.medium.com/using-6-page-and-2-page-documents-to-make-organizational-decisions-3216badde909
# NOTE: -w option in Grep matches only whole words (instead of using regex in expression)
#
# USAGE:
#   ./weasel document
# OR
#   pipe_of_content | weasel
# 
# OUTPUT:
#   blank if no weasel words/phrases are found
#   Shows word and matching line in file/output if found
# 
# TODO:
#   Fix passing multilpe files (e.g. *) again
#   STDIN works, but is very slow (awful nested loop...)

function weasel_check() {
	# Loop on keywords
	for word in "${weasel_words[@]}" ;
	do
		# Search given files for matches of word
		if [[ -e $1 ]]; then
			# File passed in
			grep_result=$(grep -wHin "$word" "$*")
		else
			# Text/STDIN passed in
			grep_result=$(echo "$*" | grep -wHin "$word")
		fi

		# If matches, print out matching word, THEN matching lines from Grep
		if [[ $? == "0" ]]; then
			echo
			echo "*****>>>>> $word <<<<<*****"
			echo $grep_result
		fi
	done
}

weasel_words=("a number of" "clearly" "completely" "could" "exceedingly" "excellent" "extremely" "extraordinary" "fairly" "few" "interestingly" "it is said" "large" "less than" "many" "more than" "most" "normally" "often" "probably" "quite" "recent" "relatively" "remarkably" "several" "significant" "substantial" "surprising" "tiny" "up to" "usually" "various" "vast" "very")

if [[ -t 0 ]]; then 
	weasel_check $*
else
	while read LINE; do
		weasel_check $LINE
	done
fi

exit 0
